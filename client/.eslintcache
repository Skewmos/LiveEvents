[{"/Users/skewmos/Documents/Liveevents/client/src/index.js":"1","/Users/skewmos/Documents/Liveevents/client/src/App.js":"2","/Users/skewmos/Documents/Liveevents/client/src/component/Footer/footer.js":"3","/Users/skewmos/Documents/Liveevents/client/src/component/Route/route.js":"4","/Users/skewmos/Documents/Liveevents/client/src/component/Nav/nav.js":"5","/Users/skewmos/Documents/Liveevents/client/src/component/BannerInformation/bannerInformation.js":"6","/Users/skewmos/Documents/Liveevents/client/src/component/Home/home.js":"7","/Users/skewmos/Documents/Liveevents/client/src/component/Button/button.js":"8","/Users/skewmos/Documents/Liveevents/client/src/component/Admin/Login/Login.js":"9","/Users/skewmos/Documents/Liveevents/client/src/component/SearchBar/searchBar.js":"10","/Users/skewmos/Documents/Liveevents/client/src/component/Slider/slider.js":"11","/Users/skewmos/Documents/Liveevents/client/src/component/Register/register.js":"12"},{"size":226,"mtime":1613819752936,"results":"13","hashOfConfig":"14"},{"size":1073,"mtime":1615724604754,"results":"15","hashOfConfig":"14"},{"size":1950,"mtime":1613819752841,"results":"16","hashOfConfig":"14"},{"size":582,"mtime":1614626053444,"results":"17","hashOfConfig":"14"},{"size":1069,"mtime":1614626044130,"results":"18","hashOfConfig":"14"},{"size":305,"mtime":1613819752840,"results":"19","hashOfConfig":"14"},{"size":2696,"mtime":1614626044131,"results":"20","hashOfConfig":"14"},{"size":388,"mtime":1614634014617,"results":"21","hashOfConfig":"14"},{"size":201,"mtime":1613819752840,"results":"22","hashOfConfig":"14"},{"size":1574,"mtime":1614626044131,"results":"23","hashOfConfig":"14"},{"size":1101,"mtime":1614626044130,"results":"24","hashOfConfig":"14"},{"size":6143,"mtime":1615734075591,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"sbd7nf",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/skewmos/Documents/Liveevents/client/src/index.js",[],["57","58"],"/Users/skewmos/Documents/Liveevents/client/src/App.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/Footer/footer.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/Route/route.js",["59"],"import {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\nimport Login from \"../Admin/Login/Login\";\nimport Home from \"../Home/home\";\nimport { Register } from \"../Register/register\";\n\nconst Routing = () => {\n    return(\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route exact path=\"/admin/login\">\n                <Login />\n            </Route>\n            <Route exact path=\"/register\">\n                <Register />\n            </Route>\n      </Switch>\n    )\n}\n\nexport default Routing;","/Users/skewmos/Documents/Liveevents/client/src/component/Nav/nav.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/BannerInformation/bannerInformation.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/Home/home.js",["60","61"],"import React from \"react\";\nimport { FaAngleDoubleDown } from 'react-icons/fa';\nimport Button from \"../Button/button\";\nimport SearchBar from '../SearchBar/searchBar';\nimport AppSlider from \"../Slider/slider\";\nimport map from \"../../images/map.svg\";\nimport billet from \"../../images/billet.svg\";\n\nimport  \"./home.scss\";\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"text\">\n                    <h1>Vivez une expérience</h1>\n                    <h2>Inoubliable</h2>\n                    </div>\n                    <div className=\"services\">\n                        <p>Accédez aux services</p>\n                        <FaAngleDoubleDown/>\n                    </div>\n               </div>\n               <div className=\"wrap\">\n                   <h3>Les concerts <span className=\"color_degrade\">disponibles</span></h3>\n                   <SearchBar className=\"searchbar\"/>\n               </div>\n               <div className=\"slider\">\n                    <AppSlider/>\n               </div>\n               <div className=\"map\">\n                   <h3>Découvrir la carte  <span className=\"color_degrade\">interactive</span></h3>   \n                    <img src={map} alr=\"map\"/>\n                   <Button classbtn=\"btnprimary btn-large\" value=\"Consulter la carte\"/>\n               </div>\n\n               <div className=\"billet\">\n                   <div className=\"booking\">\n                   <h3>Réservez vos <span className=\"color_degrade\">billets</span></h3>\n                   <p>\n                   Chaque année depuis 3 ans, la société d’évènementiel <span>« Live Events »</span> organise\n                    un festival de musique appelé <span> « Nation Sounds »</span>\n                    dans la région parisienne afin de récolter des fonds pour une association humanitaire. \n                   Plusieurs centaines de milliers de personnes sont attendues sur le site du festival.\n                   </p>\n                   <Button classbtn=\"btnprimary btn-large\" value=\"Accédez à la billetterie\"/>\n                   </div>\n                   <div className=\"bookingImg\">\n                    <img src={billet} alr=\"billet\"/>\n                   </div>\n               </div>\n\n               <div className=\"picture\">\n                   <div className=\"textPicture\">\n                   <h3>Vos photos du  <span className=\"color_degrade hirolley\">#Liveevents</span></h3>\n                   <p>Créer des filtres personnalisés unique du Nation Sounds.</p>\n                   </div>\n               </div>\n            </>\n        );\n    }\n}\n\nexport default Home;","/Users/skewmos/Documents/Liveevents/client/src/component/Button/button.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/Admin/Login/Login.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/SearchBar/searchBar.js",["62"],"import \"../SearchBar/searchBar.scss\";\nimport { useForm } from \"react-hook-form\";\n\nconst  SearchBar = () => {\n\n    const { register, handleSubmit } = useForm();\n    const onSubmit = data => console.log(data)\n    return(\n        <div className=\"searchBar\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-groupe\">\n                <label>Par scène</label>\n                <select name=\"scene\" ref={register} defaultValue=\"ZoneA\">\n                    <option value=\"Zone A\">Zone A</option>\n                    <option value=\"Zone B\">Zone B</option>\n                    <option value=\"Zone C\">Zone C</option>\n                </select>\n            </div>\n            <div className=\"form-groupe\">\n                <label>Par date</label>\n                <select name=\"date\" ref={register} defaultValue=\"9 août 2021\">\n                    <option value=\"9 août 2021\">9 août 2021</option>\n                    <option value=\"10 août 2021\">10 août 2021</option>\n                </select>\n            </div>\n            <div className=\"form-groupe\">\n                <label>Par heure</label>\n                <div className=\"select-custom\">\n                        <select name=\"heure\" ref={register} defaultValue=\"10:00 - 11:00\">\n                            <option >10:00 - 11:00</option>\n                            <option >11:00 - 12:00</option>\n                        </select>\n                </div>\n            </div>\n            <a href=\"#\">Appliquer les filtres</a>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar","/Users/skewmos/Documents/Liveevents/client/src/component/Slider/slider.js",["63","64"],"import React from \"react\";\nimport Carousel, { consts} from 'react-elastic-carousel'\nimport \"./slider.scss\";\n\n\n\nexport default function AppSlider() {\n  \n  const BadgeType  = (data) => {\n    console.log(data.data);\n    if (data.data === \"event\") {\n      return (\n        <div className=\"event\">\n        <p>Event</p>\n      </div>\n      ) \n    } else if (data.data === \"concert\") {\n      return (\n        <div className=\"concert\">\n        <p>Concert</p>\n      </div> \n      )\n    }\n  }\n\n  const BadgeSong = (data) => {\n    if (data.song) {\n      return (\n        <div className=\"song\">\n        <p>{data.song}</p>\n      </div> \n      )\n    }\n  }\n\n  const Item = () => {\n    return (\n      <div className=\"containerSlider\">\n        <img src=\"https://picsum.photos/seed/picsum/246/246\" className=\"imgSlider\"/>\n        <BadgeType data=\"event\"/>\n        <BadgeSong song=\"rap\"/>\n        <p class=\"typeMusic\">Christine and the queens</p>\n      </div>\n    )\n  }\n\n  return (\n    <Carousel itemsToScroll={2} itemsToShow={4}>\n      <Item/>\n      <Item/>\n      <Item/>\n      <Item/>\n      <Item/>\n  </Carousel>\n  );\n}",["65","66"],"/Users/skewmos/Documents/Liveevents/client/src/component/Register/register.js",["67"],"import React from 'react';\nimport Axios from 'axios';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './register.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Button from '../Button/button';\n\nclass Register extends React.Component {\n\n\n    render() {\n        return (\n            <>\n            <div className=\"container\">\n                <div className=\"text\">\n                    <h2>Formulaire d'inscription</h2>\n                </div>\n            </div>\n            <div className=\"register\">\n                <div className=\"container\">\n                    <h4>Rejoignez-nous !</h4>\n                    <p>Inscrivez-vous pour bénéficier de tous les avantages Nation Sounds.</p>\n                </div>\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    birthday: '',\n                    phone: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    firstName: Yup.string()\n                        .required('First Name is required'),\n                    lastName: Yup.string()\n                        .required('Last Name is required'),\n                    birthday: Yup.date()\n                        .required('Birthday required'),\n                    phone: Yup.string()\n                        .required('phone required'),\n                    email: Yup.string()\n                        .email('Email is invalid')\n                        .required('Email is required'),\n                    password: Yup.string()\n                        .min(6, 'Password must be at least 6 characters')\n                        .required('Password is required'),\n                    confirmPassword: Yup.string()\n                        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                        .required('Confirm Password is required')\n                })}\n                onSubmit={fields => {\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n                    Axios({\n                        method: 'post',\n                        url: 'http://localhost:8000/api/users',\n                        data: {\n                          fields: fields\n                        }\n                      });\n                }}\n            >\n                {({ errors, status, touched }) => (\n                    <Form>\n                       <div className=\"container\">\n                       <div className=\"row\">\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"firstName\">Nom </label>\n                                <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"lastName\"> Prénom </label>\n                                <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"birthday\"> Date de naissance </label>\n                                <Field name=\"birthday\" type=\"text\" className={'form-control' + (errors.birthday && touched.birthday ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"birthday\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"phone\"> Numéro  de téléphone </label>\n                                <Field name=\"phone\" type=\"text\" className={'form-control' + (errors.phone && touched.phone ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"phone\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        <div className=\"form-group col-6\">\n                            <label htmlFor=\"email\">Email</label>\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"registerBtn\">Inscrition</button>\n                        </div>\n                        </div>\n                       </div>\n                    </Form>\n                )}\n            </Formik>\n            </div>\n        </>)\n    }\n}\n\nexport { Register };",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":22,"nodeType":"74","messageId":"75","endLine":2,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":35,"column":21,"nodeType":"78","endLine":35,"endColumn":47},{"ruleId":"76","severity":1,"message":"77","line":51,"column":21,"nodeType":"78","endLine":51,"endColumn":53},{"ruleId":"79","severity":1,"message":"80","line":35,"column":13,"nodeType":"78","endLine":35,"endColumn":25},{"ruleId":"72","severity":1,"message":"81","line":2,"column":20,"nodeType":"74","messageId":"75","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":39,"column":9,"nodeType":"78","endLine":39,"endColumn":85},{"ruleId":"68","replacedBy":"82"},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","severity":1,"message":"84","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":14},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'consts' is defined but never used.",["85"],["86"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]