[{"/Users/skewmos/Documents/Liveevents/client/src/index.js":"1","/Users/skewmos/Documents/Liveevents/client/src/App.js":"2","/Users/skewmos/Documents/Liveevents/client/src/component/Footer/footer.js":"3","/Users/skewmos/Documents/Liveevents/client/src/component/Route/route.js":"4","/Users/skewmos/Documents/Liveevents/client/src/component/Nav/nav.js":"5","/Users/skewmos/Documents/Liveevents/client/src/component/BannerInformation/bannerInformation.js":"6","/Users/skewmos/Documents/Liveevents/client/src/component/Home/home.js":"7","/Users/skewmos/Documents/Liveevents/client/src/component/Button/button.js":"8","/Users/skewmos/Documents/Liveevents/client/src/component/Admin/Login/Login.js":"9","/Users/skewmos/Documents/Liveevents/client/src/component/SearchBar/searchBar.js":"10","/Users/skewmos/Documents/Liveevents/client/src/component/Slider/slider.js":"11","/Users/skewmos/Documents/Liveevents/client/src/component/Register/register.js":"12","/Users/skewmos/Documents/Liveevents/client/src/component/Billiet/billiet.js":"13"},{"size":226,"mtime":1616685509051,"results":"14","hashOfConfig":"15"},{"size":1168,"mtime":1616687375400,"results":"16","hashOfConfig":"15"},{"size":1950,"mtime":1616685508844,"results":"17","hashOfConfig":"15"},{"size":582,"mtime":1616685508847,"results":"18","hashOfConfig":"15"},{"size":2423,"mtime":1616696663637,"results":"19","hashOfConfig":"15"},{"size":468,"mtime":1616686792227,"results":"20","hashOfConfig":"15"},{"size":3360,"mtime":1616700224531,"results":"21","hashOfConfig":"15"},{"size":388,"mtime":1616685508842,"results":"22","hashOfConfig":"15"},{"size":201,"mtime":1616685508841,"results":"23","hashOfConfig":"15"},{"size":2264,"mtime":1616703298870,"results":"24","hashOfConfig":"15"},{"size":1105,"mtime":1616697997101,"results":"25","hashOfConfig":"15"},{"size":6143,"mtime":1616685508846,"results":"26","hashOfConfig":"15"},{"size":1060,"mtime":1616699858451,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"sbd7nf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/skewmos/Documents/Liveevents/client/src/index.js",[],["60","61"],"/Users/skewmos/Documents/Liveevents/client/src/App.js",["62"],"import React from \"react\"\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport Routing from \"./component/Route/route\";\nimport Nav from \"./component/Nav/nav\";\nimport Banner from \"./component/BannerInformation/bannerInformation\";\nimport background from './images/bg1.svg';\nimport background2 from './images/bg.svg';\nimport Footer from './component/Footer/footer';\nimport './App.scss';\nimport './component/utilities.scss';\n\nimport Axios from \"axios\";\n\nfunction App() {\n  Axios({\n    method: \"GET\",\n    url: \"http://localhost:8000/api\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    console.log(res.data);\n  });\n\n  let backgroundImg;\n\nif (window.location.pathname === '/' || window.location.pathname === '/home' ) {\n    backgroundImg = background;\n} else {\n  backgroundImg = background2;\n}\n\n\n  return (\n      <Router>\n          <div className=\"container-fluid p-0\">\n              <Banner/>\n              <div className=\"app\" style={{ backgroundImage: `url(${backgroundImg})`  }}>\n                  <Nav />\n                  <Routing/>\n              </div>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","/Users/skewmos/Documents/Liveevents/client/src/component/Footer/footer.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/Route/route.js",["63"],"import {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\nimport Login from \"../Admin/Login/Login\";\nimport Home from \"../Home/home\";\nimport { Register } from \"../Register/register\";\n\nconst Routing = () => {\n    return(\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route exact path=\"/admin/login\">\n                <Login />\n            </Route>\n            <Route exact path=\"/register\">\n                <Register />\n            </Route>\n      </Switch>\n    )\n}\n\nexport default Routing;","/Users/skewmos/Documents/Liveevents/client/src/component/Nav/nav.js",["64","65","66","67","68","69","70","71","72"],"import Button from \"../Button/button\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n  } from \"react-router-dom\";\nimport logo from \"../../images/liveevents-logo.svg\";\n\nconst Nav = () => {\n    return (\n        <>\n            <div className=\"row ml-0  mr-0\">\n                <div className=\"col-md-12\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light \">\n                            <a className=\"navbar-brand\" href=\"#\">\n                                <img src={logo} alt=\"Liveevents logo\"/>\n                            </a>\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                                    aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                                <ul className=\"navbar-nav ml-auto\">\n                                    <li className=\"nav-item active\">\n                                        <a className=\"nav-link\" href=\"#\">Billeterie</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"#\">Programmes</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"#\">Carte</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"#\">Partenaires</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"#\">F.A.Q</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <button className=\"btn btnprimary\" type=\"button\">Connexion</button>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Nav;","/Users/skewmos/Documents/Liveevents/client/src/component/BannerInformation/bannerInformation.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/Home/home.js",["73","74","75"],"/Users/skewmos/Documents/Liveevents/client/src/component/Button/button.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/Admin/Login/Login.js",[],"/Users/skewmos/Documents/Liveevents/client/src/component/SearchBar/searchBar.js",["76","77","78","79"],"/Users/skewmos/Documents/Liveevents/client/src/component/Slider/slider.js",["80","81"],"import React from \"react\";\nimport Carousel, { consts} from 'react-elastic-carousel'\nimport \"./slider.scss\";\n\n\n\nexport default function AppSlider() {\n  \n  const BadgeType  = (data) => {\n    console.log(data.data);\n    if (data.data === \"event\") {\n      return (\n        <div className=\"event\">\n        <p>Event</p>\n      </div>\n      ) \n    } else if (data.data === \"concert\") {\n      return (\n        <div className=\"concert\">\n        <p>Concert</p>\n      </div> \n      )\n    }\n  }\n\n  const BadgeSong = (data) => {\n    if (data.song) {\n      return (\n        <div className=\"song\">\n        <p>{data.song}</p>\n      </div> \n      )\n    }\n  }\n\n  const Item = () => {\n    return (\n      <div className=\"containerSlider\">\n        <img src=\"https://picsum.photos/seed/picsum/246/246\" className=\"imgSlider\"/>\n        <BadgeType data=\"event\"/>\n        <BadgeSong song=\"rap\"/>\n        <p className=\"typeMusic\">Christine and the queens</p>\n      </div>\n    )\n  }\n\n  return (\n    <Carousel itemsToScroll={2} itemsToShow={4}>\n      <Item/>\n      <Item/>\n      <Item/>\n      <Item/>\n      <Item/>\n  </Carousel>\n  );\n}","/Users/skewmos/Documents/Liveevents/client/src/component/Register/register.js",["82"],"import React from 'react';\nimport Axios from 'axios';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './register.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Button from '../Button/button';\n\nclass Register extends React.Component {\n\n\n    render() {\n        return (\n            <>\n            <div className=\"container\">\n                <div className=\"text\">\n                    <h2>Formulaire d'inscription</h2>\n                </div>\n            </div>\n            <div className=\"register\">\n                <div className=\"container\">\n                    <h4>Rejoignez-nous !</h4>\n                    <p>Inscrivez-vous pour bénéficier de tous les avantages Nation Sounds.</p>\n                </div>\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    birthday: '',\n                    phone: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    firstName: Yup.string()\n                        .required('First Name is required'),\n                    lastName: Yup.string()\n                        .required('Last Name is required'),\n                    birthday: Yup.date()\n                        .required('Birthday required'),\n                    phone: Yup.string()\n                        .required('phone required'),\n                    email: Yup.string()\n                        .email('Email is invalid')\n                        .required('Email is required'),\n                    password: Yup.string()\n                        .min(6, 'Password must be at least 6 characters')\n                        .required('Password is required'),\n                    confirmPassword: Yup.string()\n                        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                        .required('Confirm Password is required')\n                })}\n                onSubmit={fields => {\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n                    Axios({\n                        method: 'post',\n                        url: 'http://localhost:8000/api/users',\n                        data: {\n                          fields: fields\n                        }\n                      });\n                }}\n            >\n                {({ errors, status, touched }) => (\n                    <Form>\n                       <div className=\"container\">\n                       <div className=\"row\">\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"firstName\">Nom </label>\n                                <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"lastName\"> Prénom </label>\n                                <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"birthday\"> Date de naissance </label>\n                                <Field name=\"birthday\" type=\"text\" className={'form-control' + (errors.birthday && touched.birthday ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"birthday\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"phone\"> Numéro  de téléphone </label>\n                                <Field name=\"phone\" type=\"text\" className={'form-control' + (errors.phone && touched.phone ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"phone\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        <div className=\"form-group col-6\">\n                            <label htmlFor=\"email\">Email</label>\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"registerBtn\">Inscrition</button>\n                        </div>\n                        </div>\n                       </div>\n                    </Form>\n                )}\n            </Formik>\n            </div>\n        </>)\n    }\n}\n\nexport { Register };","/Users/skewmos/Documents/Liveevents/client/src/component/Billiet/billiet.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":10,"column":8,"nodeType":"89","messageId":"90","endLine":10,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":2,"column":22,"nodeType":"89","messageId":"90","endLine":2,"endColumn":28},{"ruleId":"87","severity":1,"message":"92","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":3,"column":22,"nodeType":"89","messageId":"90","endLine":3,"endColumn":28},{"ruleId":"87","severity":1,"message":"93","line":4,"column":5,"nodeType":"89","messageId":"90","endLine":4,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":14,"column":29,"nodeType":"96","endLine":14,"endColumn":66},{"ruleId":"94","severity":1,"message":"95","line":24,"column":41,"nodeType":"96","endLine":24,"endColumn":74},{"ruleId":"94","severity":1,"message":"95","line":27,"column":41,"nodeType":"96","endLine":27,"endColumn":74},{"ruleId":"94","severity":1,"message":"95","line":30,"column":41,"nodeType":"96","endLine":30,"endColumn":74},{"ruleId":"94","severity":1,"message":"95","line":33,"column":41,"nodeType":"96","endLine":33,"endColumn":74},{"ruleId":"94","severity":1,"message":"95","line":36,"column":41,"nodeType":"96","endLine":36,"endColumn":74},{"ruleId":"87","severity":1,"message":"92","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"97","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":11},{"ruleId":"87","severity":1,"message":"98","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":14},{"ruleId":"87","severity":1,"message":"99","line":6,"column":13,"nodeType":"89","messageId":"90","endLine":6,"endColumn":21},{"ruleId":"87","severity":1,"message":"100","line":6,"column":23,"nodeType":"89","messageId":"90","endLine":6,"endColumn":35},{"ruleId":"87","severity":1,"message":"101","line":7,"column":11,"nodeType":"89","messageId":"90","endLine":7,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":44,"column":25,"nodeType":"96","endLine":44,"endColumn":36},{"ruleId":"87","severity":1,"message":"102","line":2,"column":20,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":39,"column":9,"nodeType":"96","endLine":39,"endColumn":85},{"ruleId":"87","severity":1,"message":"92","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":14},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'map' is defined but never used.","'billet' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'consts' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]